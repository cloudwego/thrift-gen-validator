// Code generated by Validator v0.1.4. DO NOT EDIT.

package my

import (
	"bytes"
	"fmt"
	"os"
	"reflect"
	"regexp"
	"strconv"
	"strings"
	"time"
)

// unused protection
var (
	_ = fmt.Formatter(nil)
	_ = (*bytes.Buffer)(nil)
	_ = (*strings.Builder)(nil)
	_ = reflect.Type(nil)
	_ = (*regexp.Regexp)(nil)
	_ = time.Nanosecond
)

func (p *Example) IsValid() error {
	_src := p.MaxLength
	if fl := os.Getenv("FIXED_LENGTH"); fl != "" {
		if l, err := strconv.ParseInt(fl, 10, 0); err == nil {
			_src += l
		}
	}
	if len(p.Message) > int(_src) {
		return fmt.Errorf("field Message max_len rule failed, current value: %d", len(p.Message))
	}
	return nil
}
