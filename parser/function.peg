package parser


type Function Peg {
}


Function <- '@' Identifier LPAR Arguments RPAR

Arguments <- ((ConstValue / Function) ListSeparator?)*

ConstValue <- DoubleConstant / IntConstant / Literal / ConstList / ConstMap / FieldReference

FieldReference <- '$' Identifier

IntConstant <- < '0x' ([0-9] / [A-Z] / [a-z])+ / '0o' Digit+ / [+\-]? Digit+ > Skip

DoubleConstant  <- <[+\-]? (
        Digit* '.' Digit+  Exponent?
    /   Digit+ Exponent
    )> Skip

Exponent <- ('e' / 'E') IntConstant

ConstList  <- LBRK (ConstValue ListSeparator?)* RBRK

ConstMap  <- LWING (ConstValue COLON ConstValue ListSeparator?)* RWING

EscapeLiteralChar <- '\\' ["']

Literal <- '"' <(EscapeLiteralChar / !'"' .)*> '"' Skip
        / "'" <(EscapeLiteralChar / !"'" .)*> "'" Skip

Identifier <- <Letter ( Letter / Digit / '.' )*> Skip

ListSeparator <- (',' / ';') Skip

Letter <- [A-Z] / [a-z] / '_'
LetterOrDigit <- [a-z] / [A-Z] / [0-9] / [_$]

Digit <- [0-9]

Skip <- Space*
Space <- [ \t\r\n]+

LBRK        <-  '['     Skip
RBRK        <-  ']'     Skip
LWING       <-  '{'     Skip
RWING       <-  '}'     Skip
EQUAL       <-  '='     Skip
LPOINT      <-  '<'     Skip
RPOINT      <-  '>'     Skip
COMMA       <-  ','     Skip
LPAR        <-  '('     Skip
RPAR        <-  ')'     Skip
COLON       <-  ':'     Skip
